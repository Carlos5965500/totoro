async function sendWarning(totoro, msg, warningMessage) {
  try {
    const remoteJid = msg.messages[0].key.remoteJid;
    await msg.react("‚ö†Ô∏è");
    await totoro.sendMessage(remoteJid, {
      text: `‚ï≠‚îÄ‚¨£„Äå *Aviso* „Äç‚¨£\n‚ï∞‚îÄ ‚â°‚ó¶ *üç≠ Totoro te avisa lo siguiente:*\n> *Aviso*: ${warningMessage}`,
    });
  } catch (error) {
    console.error("Error enviando mensaje de aviso:", error);
  }
}

async function sendError(totoro, msg, errorMessage) {
  try {
    const remoteJid = msg.messages[0].key.remoteJid;
    await msg.react("‚ùå");
    await totoro.sendMessage(remoteJid, {
      text: `‚ï≠‚îÄ‚¨£„Äå *Error* „Äç‚¨£\n‚ï∞‚îÄ ‚â°‚ó¶ *üç≠ Totoro est√° experimentando un error*\n> *Error*: ${errorMessage}`,
    });
  } catch (error) {
    console.error("Error enviando mensaje de error:", error);
  }
}

async function sendReminder(totoro, msg, nombre, userCount) {
  const remoteJid = msg.messages[0].key.remoteJid;
  const reminderMessage =
    `‚ï≠‚îÄ‚¨£„Äå *Recordatorio de Toto para ${nombre}* „Äç‚¨£\n` +
    `‚îÇ  ‚â°‚ó¶  *üç≠ ¬°${nombre} ya eres un totoUser!*\n` +
    `‚îÇ  ‚â°‚ó¶  *üç≠ Usa +menu para ver mis comandos*\n` +
    `‚ï∞‚îÄ‚¨£\n\n` +
    `> *Contigo somos ${userCount} totoUsers*`;

  try {
    await msg.react("üê•");
    await totoro.sendMessage(remoteJid, { text: reminderMessage });
  } catch (error) {
    console.error("Error enviando mensaje de recordatorio:", error);
  }
}

async function help(totoro, msg, titulo, msgAyuda, ejemplo) {
  const remoteJid = msg.messages[0].key.remoteJid;
  const helpMessage =
    `‚ï≠‚îÄ‚¨£„Äå *Ayuda de ${titulo}* „Äç‚¨£\n` +
    `‚îÇ  ‚â°‚ó¶ ${msgAyuda}\n` +
    `‚ï∞‚îÄ‚¨£\n`+ 
    `> *Ejemplo*: ${ejemplo}`;
  try {
    await msg.react("‚ÑπÔ∏è");
    await totoro.sendMessage(remoteJid, { text: helpMessage });
  } catch (error) {
    console.error("Error enviando mensaje de ayuda:", error);
  }
}

async function sendSuccess(totoro, msg) {
  const remoteJid = msg.messages[0].key.remoteJid;
  const successMessage = 
  `‚ï≠‚îÄ‚¨£„Äå *√âxito* „Äç‚¨£` +
  `‚ï∞‚îÄ ‚â°‚ó¶ *üç≠ Totoro ha completado la acci√≥n*\n`+
  `> *√âxito*: ${msg}`; 
  try { 
    await msg.react("üç≠");
    await totoro.sendMessage(remoteJid, { text: successMessage });
  } catch (error) {
    console.error("Error enviando mensaje de √©xito:", error);
  }
}

async function noCommand(totoro, msg) {
  const remoteJid = msg.messages[0].key.remoteJid;
  const noCommandMessage = 
  `‚ï≠‚îÄ‚¨£„Äå *Comando no encontrado* „Äç‚¨£` +
  `‚ï∞‚îÄ ‚â°‚ó¶ *üç≠ Totoro no encontr√≥ el comando solicitado*\n`+
  `> *Ayuda*: Usa +menu para ver mis comandos`; 
  try { 
    await msg.react("‚ùå");
    await totoro.sendMessage(remoteJid, { text: noCommandMessage });
  } catch (error) {
    console.error("Error enviando mensaje de comando no encontrado:", error);
  }
}

async function totoreact(msg, emoji) {
  try { 
    await msg.react(emoji);
  } catch (error) {
    console.error("Error enviando reacci√≥n:", error);
  }
}

module.exports = {
  sendWarning,
  sendError,
  sendReminder,
  sendSuccess,
  help, 
  noCommand,
  totoreact,
};
